---
name: multi-tools-img-CI
# on:
#   push:
#     paths:
#     - resources/**
#     - .github/workflows/multi-tools-alpine-image.yml
#   pull_request:
#     paths:
#     - resources/**
#     - .github/workflows/multi-tools-alpine-image.yml
#   schedule:
#   - cron: 0 0 1 * *

env:
  RED: \033[1;31m
  GREEN: \033[1;32m
  YELLOW: \033[1;33m
  BLUE: \033[1;34m
  PURPLE: \033[1;35m
  CYAN: \033[1;36m
  BLANK: \033[0m
  WORKING_DIR: resources/
  IMAGE_NAME: multi-tools-alpine
  REPOSITORY: ixxel

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ixxel/unit-tests-alpine:latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Hadolint Dockerfile scan
      uses: ixxeL-actions/hadolint@main
      with:
        format: json
        treshold: error
        working-dir: ${WORKING_DIR}
  build:
    needs: [test]
    runs-on: ubuntu-latest
    container:
      image: ixxel/multi-tools-alpine:latest
      options: --privileged
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Build image version
      id: build-version
      run: |
        echo -e "${BLUE}[ STEP - BUILDING VERSION ] > Building docker image version.${BLANK}"
        echo -e "${YELLOW}[ EXECUTING ] > Executing building.${BLANK}"
        VERSION=$(cat ${WORKING_DIR}/Dockerfile | grep -oE "IMG_VERSION=\"[0-9.]+\"" | grep -oE "[0-9.]+")
        IMAGE_VERSION=${VERSION}-${{ github.run_number }}
        echo ::set-output name=IMAGE_VERSION::${IMAGE_VERSION}
        echo -e "${CYAN}[ INFO ] > Image version for ${IMAGE_NAME} is ${IMAGE_VERSION}.${BLANK}"
    - name: Build docker image with buildah
      id: build-image
      env:
        IMAGE_VERSION: ${{ steps.build-version.outputs.IMAGE_VERSION }}
      uses: ixxeL-actions/buildah-bud@main
      with:
        tag: ${IMAGE_NAME}:${IMAGE_VERSION}
        file: '""'
        format: oci
        build-arg: ''
        working-dir: ${WORKING_DIR}
    - name: Archive docker image for CVE scan
      id: archive-image
      env:
        IMAGE_VERSION: ${{ steps.build-version.outputs.IMAGE_VERSION }}
      uses: ixxeL-actions/buildah-push@main
      with:
        image-id: localhost/${IMAGE_NAME}:${IMAGE_VERSION}
        transport: docker-archive
        destination: /tmp/${IMAGE_NAME}-${IMAGE_VERSION}.tar
        format: '""'
    - name: Security scan for docker image (Grype)
      id: scan-image1
      env:
        IMAGE_VERSION: ${{ steps.build-version.outputs.IMAGE_VERSION }}
      uses: ixxeL-actions/grype-scan@main
      with:
        image-ref: /tmp/${IMAGE_NAME}-${IMAGE_VERSION}.tar
        transport: docker-archive
        fail-on: '""'
        output: table
        scope: AllLayers
        template: '""'
        verbose: ''
    - name: Security scan for docker image (Trivy)
      id: scan-image2
      env:
        IMAGE_VERSION: ${{ steps.build-version.outputs.IMAGE_VERSION }}
      uses: ixxeL-actions/trivy-scan@main
      with:
        scan-type: image
        input: /tmp/${IMAGE_NAME}-${IMAGE_VERSION}.tar
        security-checks: vuln,config
        severity: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
        output: '""'
        format: table
        template: ''
        skip-dirs: /usr/local/bin,/usr/bin
    - name: Transfer image with Skopeo
      id: transfer-image-version
      env:
        IMAGE_VERSION: ${{ steps.build-version.outputs.IMAGE_VERSION }}
      uses: ixxeL-actions/skopeo-copy@main
      with:
        src-img: localhost/${IMAGE_NAME}:${IMAGE_VERSION}
        dst-img: ${REPOSITORY}/${IMAGE_NAME}:${IMAGE_VERSION}
        format: v2s2
        src-transport: containers-storage
        dst-transport: docker
        dst-creds: ixxel:${{ secrets.DOCKER_IO_PWD }}
    - name: Transfer image with Skopeo (latest)
      id: transfer-image-latest
      env:
        IMAGE_VERSION: ${{ steps.build-version.outputs.IMAGE_VERSION }}
      uses: ixxeL-actions/skopeo-copy@main
      with:
        src-img: localhost/${IMAGE_NAME}:${IMAGE_VERSION}
        dst-img: ${REPOSITORY}/${IMAGE_NAME}:latest
        format: v2s2
        src-transport: containers-storage
        dst-transport: docker
        dst-creds: ixxel:${{ secrets.DOCKER_IO_PWD }}